# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function (${1}) {
		${2}
	};
# if
snippet if
	if (${1:true}) {
		${2}
	}
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	}
	else {
		${3}
	}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch (${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
# you shouldn't declare the var of the for on the for but on the top of the function
snippet forv
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	}
# for (...) {...} (Improved Native For-Loop)
snippet forrv
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	}
snippet for
	for (${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	}
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	}
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# try
snippet try
	try {
		${1:/* code */}
	} catch(e) {
		${2:/* handle error */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# literal object value
snippet :v
	"${1:name}": ${2:$1}${3:,}${4}
# literal object value (string)
snippet :sv
	"${1:name}": "${2:$1}"${3:,}${4}
# default value for maybe undefined variable
snippet def
	${1:varname} = $1 || ${2:0};${3}
# setTimeout function
snippet timeout
	setTimeout(function() {
			${1}
		}, ${2});
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}

# jquery stuff
snippet $click
	$("#${1:id}").click(${2:callback});${3}
snippet $id
	$("#${1:id}").${2};${3}
snippet $get
	$.get(${1:url}).success(${2:okCb}).error(${3:errorCb});${4}
snippet $post
	$.post(${1:url}, ${2:data}).success(${3:okCb}).error(${4:errorCb});${5}

snippet $val
	$("#${1:id}").val(${2});${3}
snippet $valtrim
	$("#${1:id}").val().trim();${2}

snippet $vval
	${1:varname} = $("#${2:$1}").val();${3}
snippet $vvaltrim
	${1:varname} = $("#${2:$1}").val().trim();${3}

snippet clog
	console.log("${1}"${2});${3}
